name: Publish Winget Manifest

on:
  release:
    types: [published]

jobs:
  publish-winget:
    name: Update and submit WinGet manifest
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Set variables from release
        id: vars
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF_NAME
          if ($version.StartsWith('v')) { $version = $version.Substring(1) }
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Download release asset (zip)
        id: dl
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          fileName: league-mod-${{ steps.vars.outputs.version }}-windows-x64.zip
          extract: false

      - name: Compute SHA256 of asset
        id: sha
        shell: pwsh
        run: |
          $zip = Get-ChildItem -File -Name "league-mod-${{ steps.vars.outputs.version }}-windows-x64.zip"
          if (-not $zip) { throw "Release asset not found" }
          $hash = (Get-FileHash -Algorithm SHA256 $zip).Hash.ToLowerInvariant()
          echo "sha256=$hash" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Update winget manifests
        shell: pwsh
        run: |
          ./winget/update-manifest.ps1 -Version "${{ steps.vars.outputs.version }}" -GitHubUsername "${{ github.repository_owner }}" -Sha256Hash "${{ steps.sha.outputs.sha256 }}"

      - name: Validate manifests
        shell: pwsh
        run: |
          winget validate "winget/manifests/LeagueToolkit/LeagueMod/${{ steps.vars.outputs.version }}"

      - name: Commit and push manifest changes
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add winget/manifests/LeagueToolkit/LeagueMod/${{ steps.vars.outputs.version }}
          $changed = git diff --cached --name-only
          if ($changed) {
            git commit -m "chore(winget): update manifest for ${{ steps.vars.outputs.version }}"
            git push
          } else {
            Write-Host "No changes to commit"
          }

      - name: Install WinGetCreate
        shell: pwsh
        run: |
          dotnet tool install --global Microsoft.WingetCreate --version 1.*
          echo "${env:USERPROFILE}\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Submit to winget-pkgs via WinGetCreate
        env:
          GITHUB_TOKEN: ${{ secrets.WINGETCREATE_TOKEN }}
        shell: pwsh
        run: |
          $path = "${{ github.workspace }}\winget\manifests\LeagueToolkit\LeagueMod\${{ steps.vars.outputs.version }}"
          if (-not (Test-Path -LiteralPath $path)) { throw "Manifest path not found: $path" }
          # Use -submit directly with PAT to create PR to winget-pkgs
          wingetcreate submit -t "$env:GITHUB_TOKEN" -prtitle "LeagueToolkit.LeagueMod v${{ steps.vars.outputs.version }}" "$path"
